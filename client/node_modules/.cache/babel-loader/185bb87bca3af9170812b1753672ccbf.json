{"ast":null,"code":"var _jsxFileName = \"/Users/temirlankhakhazov/WebstormProjects/NodeJS_InternetShop/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true);\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}, \"eoNEOO0XgZmELjwcufg9rFYsGdc=\"));\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/temirlankhakhazov/WebstormProjects/NodeJS_InternetShop/client/src/App.js"],"names":["React","useContext","useEffect","BrowserRouter","AppRouter","observer","App","user","Context","loading","setLoading","useState","check","then","data","setUser","setIsAuth","finally"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;AAGA,MAAMC,GAAG,GAAGD,QAAQ,SAAC,MAAM;AAAA;;AACvB,QAAM;AAACE,IAAAA;AAAD,MAASN,UAAU,CAACO,OAAD,CAAzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,IAAD,CAAtC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,GAAGC,IAAR,CAAaC,IAAI,IAAI;AACjBP,MAAAA,IAAI,CAACQ,OAAL,CAAa,IAAb;AACAR,MAAAA,IAAI,CAACS,SAAL,CAAe,IAAf;AACH,KAHD,EAGGC,OAHH,CAGW,MAAMP,UAAU,CAAC,KAAD,CAH3B;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArBmB,kCAApB;MAAMH,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, {useContext, useEffect} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport {observer} from \"mobx-react-lite\";\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}