{"ast":null,"code":"var _jsxFileName = \"/Users/temirlankhakhazov/Desktop/Test2/client/src/components/TypeBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: device.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: 'pointer'\n      },\n      active: type.id === device.selectedType.id,\n      onClick: () => device.setSelectedType(type),\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}, \"7NqvmAVKlrxWo1mWsul1uXNUccI=\"));\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"sources":["/Users/temirlankhakhazov/Desktop/Test2/client/src/components/TypeBar.js"],"names":["React","useContext","observer","Context","ListGroup","TypeBar","device","types","map","type","cursor","id","selectedType","setSelectedType","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;AAEA,MAAMC,OAAO,GAAGH,QAAQ,SAAC,MAAM;AAAA;;AAC3B,QAAM;AAACI,IAAAA;AAAD,MAAWL,UAAU,CAACE,OAAD,CAA3B;AACA,sBACI,QAAC,SAAD;AAAA,cACKG,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiBC,IAAI,iBACtB,QAAC,SAAD,CAAW,IAAX;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OADX;AAEI,MAAA,MAAM,EAAED,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACM,YAAP,CAAoBD,EAF5C;AAGI,MAAA,OAAO,EAAE,MAAML,MAAM,CAACO,eAAP,CAAuBJ,IAAvB,CAHnB;AAAA,gBAMKA,IAAI,CAACK;AANV,OAIWL,IAAI,CAACE,EAJhB;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhBuB,kCAAxB;MAAMN,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {ListGroup} from \"react-bootstrap\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n            <ListGroup.Item\n                style={{cursor: 'pointer'}}\n                active={type.id === device.selectedType.id}\n                onClick={() => device.setSelectedType(type)}\n                key = {type.id}\n            >\n                {type.name}\n            </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;"]},"metadata":{},"sourceType":"module"}